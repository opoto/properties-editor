/* ---------- Basic Auth forms ------------ */

$("#fetch-auth").change(function (event) {
  if ($("#fetch-auth").is(":checked")) {
    $("#tfetch-auth").show();
  } else {
    $("#tfetch-auth").hide();
  }
  return false;
});
$("#post-auth").change(function (event) {
  if ($("#post-auth").is(":checked")) {
    $("#tpost-auth").show();
  } else {
    $("#tpost-auth").hide();
  }
  return false;
});

/* ---------- Status messages ------------ */

function setStatus(msg, options) {
  $("#status-msg").text(msg);
  var statusclass = options && options.class ? options.class : "status-info";
  $("#status-msg").attr("class", statusclass);
  $("#status").fadeIn();
  if (options && options.timeout) {
    setTimeout(function () {
      clearStatus();
    }, 1000 * options.timeout);
  }
}

function clearStatus() {
  $("#status").fadeOut(800);
}

/* ---------- Property file loading ------------ */

function handleFileSelect(event) {
  var file = event.target.files[0]; // File object
  var reader = new FileReader();
  reader.onload = function (event) {
    parseProperties(this.result, file.name);
  };
  reader.onerror = function (err) {
    setStatus("File loading failed: " + err, {
      class: "status-error",
      timeout: 3
    });
  }
  // Read in the image file as a data URL.
  reader.readAsText(file);
}
$("#file").change(handleFileSelect);


/* ---------- Property URL loading ------------ */

function fetchURL(event) {
  var url = $("#fetch-url").val();
  var options = {};
  if ($("#fetch-auth").is(":checked")) {
    options.username = decodeURI($("#fetch-user").val().trim());
    options.password = decodeURI($("#fetch-password").val().trim());
  }
  $.get(url, options)
    .done(function (data) {
      parseProperties(data, url.substring(url.lastIndexOf("/") + 1));
    })
    .fail(function () {
      setStatus("File loading failed: " + err, {
        class: "status-error",
        timeout: 3
      });
    });
}
$("#fetch").click(fetchURL);


/* ---------- Property file display ------------ */


function deleteProperties() {
  $("#tprops").empty();
  $("#pname").text("");
  $("#output").empty();
  $("#file").val("");
}

function clearProperties() {
  $("#tprops tr").each(function (idx) {
    $(this).find("input[type=checkbox]").prop('checked', true);
    $(this).find("input[type=text]").val("");
  });
}

function parseProperties(properties, name) {
  deleteProperties();
  if (name) {
    var slash = name.lastIndexOf("/");
    var dot = name.lastIndexOf(".");
    if (dot <= 0) {
      dot = undefined;
    }
    name = name.substring(slash + 1, dot);
    $("#pname").text(name);
  }
  var desc;
  var lines = properties.split('\n');
  for (var i = 0; i < lines.length; i++) {
    var line = lines[i];
    var eq = line.indexOf("=");
    if (line.startsWith("#")) {
      // comment line
      desc = line.substring(1);
    } else if (eq > 0) {
      var vname = encodeURI(line.substring(0, eq).trim());
      var val= encodeURI(line.substring(eq + 1).trim());
      addProperty(vname, val, desc);
    } else if (line.trim()) {
      setStatus("Syntax error, line " + (i + 1) + ": " + line, {
        class: "status-error",
        timeout: 3
      });
      return;
    } else {
      desc = undefined;
    }
  }
}

function addProperty(name, value, desc) {
  var input = "<input type='text' value='" + value + "'/>";
  if (desc) {
    input += "<br><span>" + desc + "</span>";
  }
  $("#tprops").append("<tr><td><input type='checkbox' checked/> " + name + "</td><td>" + input + "</td></tr>");
}

$("#clear-form").click(clearProperties);
$("#delete-form").click(deleteProperties);

/* ---------- Property file data collection ------------ */

function getProperties() {
  var properties = "";
  properties += "## Generated by " + window.location + "\n";
  properties += "## Date: " + new Date().toISOString() + "\n\n";
  $("#tprops tr").each(function (idx) {
    var isIncluded = $(this).find("input[type=checkbox]").is(":checked");
    if (isIncluded) {
      var name = $(this).find("td:first").text().trim();
      var value = $(this).find("input[type=text]").val().trim();
      var desc = $(this).find("span").text().trim();
      if (desc) {
        properties += "# " + desc + "\n";
      }
      properties += name + "=" + value + "\n";
    }
  });
  return properties;
}

function getName() {
  return $("#pname").text();
}
$("#pname-edit").click(function () {
  var oldname = $("#pname").text();
  if (oldname) {
    var newname = prompt("Change property file name:", oldname);
    if (newname) {
      $("#pname").text(newname);
    }
  }
});

/* ---------- Property file saving ------------ */

function download(filename, text) {
  var pom = document.createElement('a');
  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
  pom.setAttribute('download', filename);

  if (document.createEvent) {
    var event = document.createEvent('MouseEvents');
    event.initEvent('click', true, true);
    pom.dispatchEvent(event);
  } else {
    pom.click();
  }
}

$("#save").click(function () {
  download(getName() + ".properties", getProperties());
});

/* ---------- Property file posting ------------ */

function friendpasteUpload(name, data, onDone, onFail) {
  $.ajax({
    method: "POST",
    url: "//www.friendpaste.com/",
    dataType: "json",
    contentType: "application/json; charset=utf-8",
    data: JSON.stringify({
      "title": name,
      "snippet": data,
      "password": "dummy",
      "language": "text"
    })
  }).done(function (resp) {
    if (resp.ok) {
      onDone(resp.url + "?rev=" + resp.rev, resp.url + "/raw?rev=" + resp.rev);
    } else {
      onFail(resp.reason);
    }
  }).fail(onFail);
}

$("#post").click(function () {
  if (localStorage.getItem("nopost")) {
    onPostDone(undefined, "https://friendpaste.com/2P0OaZhUfBH2mfWJzYm6KD/raw?rev=386261396364");
    return;
  }
  var username, password;
  if ($("#post-auth").is(":checked")) {
    username = $("#post-user").val().trim();
    password = $("#post-password").val().trim();
  }
  friendpasteUpload(getName(), getProperties(), onPostDone, onPostFailed);
});

function onPostDone(viewurl, rawurl) {
  var output = $("#output");
  output.empty();
  output.html("<div><input type='text' id='output-url' readonly='readonly' value='" + rawurl + "'/></div>" +
    "<img src='https://api.qrserver.com/v1/create-qr-code/?size=200x200&bgcolor=fff&data=>" + encodeURIComponent(rawurl) + "'/>");

  $("#output-url").click(function(event) {
    event.target.select();
    event.target.setSelectionRange(0, 99999); /*For mobile devices*/
    /* Copy the text inside the text field */
    document.execCommand("copy");
    setStatus("URL copied!", { timeout: 2});
  });
}

function onPostFailed(err) {
  setStatus("File upload failed: " + err, {
    class: "status-error",
    timeout: 2
  });
}